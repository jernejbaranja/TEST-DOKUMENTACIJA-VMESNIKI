<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2017 rel. 3 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altova-xfi="http://www.altova.com/xslt-extensions/xbrl" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:clitype="clitype" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:onlC="http://zzzs.si/b2b/onl/0001/DataTypes/ONLComplexDataType" xmlns:onlS="http://zzzs.si/b2b/onl/0001/DataTypes/ONLSimpleDataType" xmlns:onlisidt="http://zzzs.si/b2b/onl/0001/ISI/ONLISIDataTypes" xmlns:onlpzzdt="http://zzzs.si/b2b/onl/0001/PZZ/ONLPZZDataTypes" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xff="http://www.xbrl.org/2010/function/formula" xmlns:xfi="http://www.xbrl.org/2008/function/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altova-xfi altovaext array clitype ds fn iso4217 ix java link map math onlC onlS onlisidt onlpzzdt sps xbrldi xbrli xenc xff xfi xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:decimal-format name="format1" grouping-separator="." decimal-separator=","/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="2cm" margin-right="2cm" page-height="29.70cm" page-width="21cm" margin-top="1cm" margin-bottom="1.25cm">
				<fo:region-body margin-top="1.54cm" margin-bottom="0.95cm" column-count="1" column-gap="0.2cm"/>
				<fo:region-before region-name="even-page-header" overflow="hidden" extent="1.54cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="2cm" margin-right="2cm" page-height="29.70cm" page-width="21cm" margin-top="1cm" margin-bottom="1.25cm">
				<fo:region-body margin-top="1.54cm" margin-bottom="0.95cm" column-count="1" column-gap="0.2cm"/>
				<fo:region-before region-name="odd-page-header" overflow="hidden" extent="1.54cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
							<dc:title>Potrdilo o upravičeni zadržanosti od dela</dc:title>
							<dc:creator>ZZZS</dc:creator>
							<dc:description/>
						</rdf:Description>
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2017 rel. 3 sp1 (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-header">
					<fo:block-container overflow="hidden" display-align="before">
						<fo:block font-family="Open Sans" font-size="10px"/>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-header">
					<fo:block-container overflow="hidden" display-align="before">
						<fo:block font-family="Open Sans" font-size="10px"/>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Open Sans" font-size="10px" color="black" keep-together.within-page="always" keep-together.within-column="always">
						<xsl:for-each select="$XML">
							<fo:inline color="red" font-family="Open Sans" font-size="large" font-weight="bold">
								<xsl:text>&#160;</xsl:text>
							</fo:inline>
							<fo:block/>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<xsl:variable name="altova:CurrContextGrid_1" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="right">
													<fo:inline color="red" font-family="Open Sans" font-size="12pt" font-weight="bold">
														<xsl:text>PREKLICAN</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Open Sans" font-size="14pt" font-weight="bold">
														<xsl:text>POTRDILO O UPRAVIČENI ZADRŽANOSTI OD DELA&#160; ŠT. </xsl:text>
													</fo:inline>
													<xsl:for-each select="$XML">
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="StevilkaPotrdilaOZadrzanostiOdDela">
																	<xsl:variable name="value-of-template_2">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_2),'&#x200B;')">
																			<fo:block font-family="Open Sans" font-size="14pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Open Sans" font-size="14pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
													<fo:block/>
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_3" select="."/>
								<fo:table-body font-weight="normal" start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>1 - IZVAJALEC</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>2 - ZDRAVNIK</xsl:text>
														</fo:inline>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-weight="normal" padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Številka: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Izvajalec">
																	<xsl:for-each select="RIZDDZStevilka">
																		<xsl:variable name="value-of-template_4">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_4),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_4"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_4"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-weight="normal" padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Naziv: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Izvajalec">
																	<xsl:for-each select="NazivIzvajalca">
																		<xsl:variable name="value-of-template_5">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_5"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_5"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-left-color="green" border-left-style="none" border-right-color="green" border-right-style="none" border-top-color="green" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" font-weight="normal" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Številka: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="RIZDDZStevilka">
																		<xsl:variable name="value-of-template_6">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_6"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_6"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Priimek in ime:&#160;&#160; </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="Priimek1">
																			<xsl:variable name="value-of-template_7">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_7),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_7"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_7"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:if test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/ImeZdravnika/PriimekVezaj)">
															<fo:inline font-family="Open Sans">
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</xsl:if>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="PriimekVezaj">
																			<xsl:variable name="value-of-template_8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="Priimek2">
																			<xsl:variable name="value-of-template_9">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_9),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_9"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_9"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:choose>
															<xsl:when test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/ImeZdravnika/Priimek2)"/>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/ImeZdravnika/Priimek2">
																<fo:inline font-family="Open Sans">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="Ime1">
																			<xsl:variable name="value-of-template_10">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_10"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_10"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:if test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/ImeZdravnika/ImeVezaj)">
															<fo:inline font-family="Open Sans">
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</xsl:if>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="ImeVezaj">
																			<xsl:variable name="value-of-template_11">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_11"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_11"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="ImeZdravnika">
																		<xsl:for-each select="Ime2">
																			<xsl:variable name="value-of-template_12">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_12"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_12"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Vrsta zdravnika: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zdravnik">
																	<xsl:for-each select="SifraVrsteZdravnika">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/SifraVrsteZdravnika/@sifra = 1">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>OSEBNI</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/Zdravnik/SifraVrsteZdravnika/@sifra = 2">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NADOMESTNI</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_14" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>3 - ZAVAROVANA OSEBA </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>4 - POVEZANA OSEBA</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block border-bottom-style="none" padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Številka: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ZZZSStevilka">
																		<xsl:variable name="value-of-template_15">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_15"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_15"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Priimek in ime: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Priimek1">
																			<xsl:variable name="value-of-template_16">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_16),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_16"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:if test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZavarovanaOseba/ImeOsebe/PriimekVezaj)">
															<fo:inline font-family="Open Sans">
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</xsl:if>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="PriimekVezaj">
																			<xsl:variable name="value-of-template_17">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_17"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_17"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Priimek2">
																			<xsl:variable name="value-of-template_18">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_18"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_18"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:choose>
															<xsl:when test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZavarovanaOseba/ImeOsebe/Priimek2)"/>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZavarovanaOseba/ImeOsebe/Priimek2">
																<fo:inline font-family="Open Sans">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Ime1">
																			<xsl:variable name="value-of-template_19">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_19),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_19"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_19"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:if test="not(Podatki/ZavarovanaOseba/ImeOsebe/ImeVezaj)">
																<fo:inline font-family="Open Sans">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</xsl:if>
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="ImeVezaj">
																			<xsl:variable name="value-of-template_20">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_20),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_20"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_20"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Ime2">
																			<xsl:variable name="value-of-template_21">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_21),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_21"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_21"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Datum rojstva:</xsl:text>
														</fo:inline>
														<fo:inline>
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="DatumRojstva">
																		<fo:inline font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>.</xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Zavarovalna podlaga: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="SifraZavarovalnePodlageIzOZZ">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Enota ZZZS zavarovanja: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="ZavarovanaOseba">
																	<xsl:for-each select="SifraIzpostaveLokacijeZaposlitve">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-left-color="green" border-left-style="none" border-right-color="green" border-right-style="none" border-top-color="green" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block border-left-style="none" border-top-style="none" padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Priimek in ime: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Priimek1">
																			<xsl:variable name="value-of-template_25">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_25),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_25"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_25"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:if test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/ImeOsebe/PriimekVezaj)">
															<fo:inline font-family="Open Sans">
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</xsl:if>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="PriimekVezaj">
																			<xsl:variable name="value-of-template_26">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_26"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_26"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Priimek2">
																			<xsl:variable name="value-of-template_27">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_27"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_27"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:choose>
															<xsl:when test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/ImeOsebe/Priimek2)"/>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/ImeOsebe/Priimek2">
																<fo:inline font-family="Open Sans">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Ime1">
																			<xsl:variable name="value-of-template_28">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_28"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_28"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:if test="not(onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/ImeOsebe/ImeVezaj)">
															<fo:inline font-family="Open Sans">
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</xsl:if>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="ImeVezaj">
																			<xsl:variable name="value-of-template_29">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_29),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_29"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_29"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="ImeOsebe">
																		<xsl:for-each select="Ime2">
																			<xsl:variable name="value-of-template_30">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_30),'&#x200B;')">
																					<fo:block font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_30"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Open Sans" font-weight="bold">
																						<xsl:copy-of select="$value-of-template_30"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Datum rojstva: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="DatumRojstva">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Vrsta povezane osebe: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PovezanaOseba">
																	<xsl:for-each select="SifraVrstePovezaneOsebe">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="ONL">
															<xsl:for-each select="VhodniPodatki">
																<xsl:for-each select="VsebinskiPodatki">
																	<xsl:for-each select="Telo">
																		<xsl:for-each select="Zapisovanje">
																			<xsl:for-each select="ZadrzanostOdDela">
																				<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
																					<xsl:for-each select="Podatki">
																						<xsl:for-each select="PovezanaOseba">
																							<xsl:for-each select="SifraVrstePovezaneOsebe">
																								<xsl:for-each select="@sifra">
																									<fo:inline font-family="Open Sans" font-weight="bold">
																										<xsl:value-of select="string(.)"/>
																									</fo:inline>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/SifraVrstePovezaneOsebe/@sifra=1">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>PARTNER</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/SifraVrstePovezaneOsebe/@sifra=2">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>OTROK</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/PovezanaOseba/SifraVrstePovezaneOsebe/@sifra=3">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>DRUGO</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<fo:block/>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_34" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>5 - PRVI DAN ZADRŽANOSTI</xsl:text>
														</fo:inline>
														<fo:inline color="gray" font-family="Open Sans" font-size="8pt">
															<xsl:text>&#160; </xsl:text>
														</fo:inline>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160; </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>6 - ZADNJI DAN ZADRŽANOSTI</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Prvi dan zadržanosti od:&#160; </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PrviDanZadrzanosti">
																	<xsl:for-each select="DatumPrvegaDneZadrzanosti">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<xsl:for-each select="ONL">
															<xsl:for-each select="VhodniPodatki">
																<xsl:for-each select="VsebinskiPodatki">
																	<xsl:for-each select="Telo">
																		<xsl:for-each select="Zapisovanje">
																			<xsl:for-each select="ZadrzanostOdDela">
																				<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
																					<xsl:for-each select="Podatki">
																						<xsl:for-each select="PrviDanZadrzanosti">
																							<xsl:for-each select="DatumPrvegaDneZadrzanosti">
																								<fo:inline font-family="Open Sans" font-weight="bold">
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																									<xsl:text>. </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																									<xsl:text>. </xsl:text>
																									<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																								</fo:inline>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Prejšnja zadržanost od dela-recidiv </xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>od: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PrviDanZadrzanosti">
																	<xsl:for-each select="PrejsnjaZadrzanostRecidiv">
																		<xsl:for-each select="DatumOd">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160; do: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="PrviDanZadrzanosti">
																	<xsl:for-each select="PrejsnjaZadrzanostRecidiv">
																		<xsl:for-each select="DatumDo">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-left-color="green" border-left-style="none" border-right-color="green" border-right-style="none" border-top-color="green" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block font-weight="normal" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160; Za diagnozo:&#160;&#160;&#160;&#160;&#160; Za razlog:&#160;&#160;&#160;&#160;&#160; Za plačnika:</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaDiagnozo=&apos;true&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>DA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaDiagnozo=&apos;false&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NE</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaRazlog=&apos;true&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>DA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaRazlog=&apos;false&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NE</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaPlacnika=&apos;true&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>DA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/ZadnjiDanZadrzanosti/ZaPlacnika=&apos;false&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NE</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_39" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>7 - ZAVEZANEC</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>8 - ODLOČBA</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block border-left-style="none" border-top-style="none" padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Naziv: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zavezanec">
																	<xsl:for-each select="NazivZavezanca">
																		<xsl:variable name="value-of-template_40">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_40),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_40"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_40"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Registrska št.: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zavezanec">
																	<xsl:for-each select="RegistrskaStevilka">
																		<xsl:variable name="value-of-template_41">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_41),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_41"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_41"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Šifra dejavnosti: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zavezanec">
																	<xsl:for-each select="SifraDejavnosti">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;&#160;&#160;&#160; Zap.št.potrdila: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Zavezanec">
																	<xsl:for-each select="ZaporednaStevilkaPotrdila">
																		<xsl:variable name="value-of-template_43">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_43),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_43"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_43"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-left-color="green" border-left-style="none" border-right-color="green" border-right-style="none" border-top-color="green" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Zadržan po odločbi št.: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Odlocba">
																	<xsl:for-each select="StevilkaOdlocbe">
																		<xsl:variable name="value-of-template_44">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_44),'&#x200B;')">
																				<fo:block font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_44"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Open Sans" font-weight="bold">
																					<xsl:copy-of select="$value-of-template_44"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160; </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Odlocba">
																	<xsl:for-each select="SifraIzdajatelja">
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160; </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/Odlocba/SifraIzdajatelja/@sifra=1">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>IMENOVANEGA ZDRAVNIKA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/Odlocba/SifraIzdajatelja/@sifra=2">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>ZDRAVSTVENE KOMISIJE</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>do: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="Odlocba">
																	<xsl:for-each select="DatumZadrzanostiPoOdlocbiDo">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_47" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>9 - NAPOTEN NA IK </xsl:text>
														</fo:inline>
														<fo:inline color="gray" font-family="Open Sans" font-size="8pt">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>10 - ZADRŽANOST OD DELA</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-style="solid" border-bottom-width="thin" border-color="green" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Napoten na IK dne: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="NapotitevNaInvalidskoKomisijo">
																	<xsl:for-each select="DatumNapotitve">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Postopek zaključen: </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/NapotitevNaInvalidskoKomisijo/OznakaZakljuckaPostopkaInvalidskeKomisije=&apos;true&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>DA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/NapotitevNaInvalidskoKomisijo/OznakaZakljuckaPostopkaInvalidskeKomisije=&apos;false&apos;">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NE</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-color="green" border-left-color="green" border-left-style="none" border-right-color="green" border-right-style="none" border-top-color="green" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="solid" border-bottom-width="thin" border-color="green" border-left-color="green" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Polni delovni čas od: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="ZadrzanostZaPolniDelovniCas">
																		<xsl:for-each select="DatumOd">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text> do: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="ZadrzanostZaPolniDelovniCas">
																		<xsl:for-each select="DatumDo">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Krajši delovni čas od: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="ZadrzanostZaKrajsiDelovniCas">
																		<xsl:for-each select="DatumOd">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text> do: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="ZadrzanostZaKrajsiDelovniCas">
																		<xsl:for-each select="DatumDo">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																				<xsl:text>. </xsl:text>
																				<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Dolžan delati: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="SteviloUrDelovneObveznostiNaDan">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(string(.)), '##0,00', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text> ur na dan</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Od tega zadržan od dela: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="CasZadrzanostiOdDela">
																	<xsl:for-each select="SteviloUrZadrzanostiNaDan">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(string(.)), '##0,00', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160; ur na dan</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
								<fo:table-column column-width="50%"/>
								<fo:table-column column-width="0.100in"/>
								<fo:table-column column-width="50%"/>
								<xsl:variable name="altova:CurrContextGrid_55" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>11 - RAZLOG ZADRŽANOSTI</xsl:text>
														</fo:inline>
														<fo:inline color="gray" font-family="Open Sans" font-size="8pt">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline color="green" font-family="Open Sans" font-size="8pt">
															<xsl:text>12 - INVALIDNOST</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="gray" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Razlog zadržanosti: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="RazlogZadrzanosti">
																	<xsl:for-each select="SifraRazlogaZadrzanosti">
																		<xsl:if test="@sifra&lt;10">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:text>0</xsl:text>
																			</fo:inline>
																		</xsl:if>
																		<xsl:for-each select="@sifra">
																			<fo:inline font-family="Open Sans" font-weight="bold">
																				<xsl:value-of select="string(.)"/>
																			</fo:inline>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=1">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>BOLEZEN</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=2">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>POŠKODBA IZVEN DELA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=3">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>POKLICNA BOLEZEN</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=4">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>POŠKODBA PRI DELU</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=5">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>POŠ.PO TRETJI OSEBI IZVEN DELA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=6">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>NEGA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=7">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>TRANSPLANTACIJA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=8">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>IZOLACIJA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=9">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>SPREMSTVO</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=10">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>USPOSABLJANJE ZA REHABILITACIJO OTROKA</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/RazlogZadrzanosti/SifraRazlogaZadrzanosti/@sifra=11">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>POŠKODBA NASTALA PRI AKTIVNOSTIH IZ 18.ČLENA ZAKONA</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
														<fo:block/>
														<fo:inline font-family="Open Sans">
															<xsl:text>Prvi dan zadržanosti za razlog: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="RazlogZadrzanosti">
																	<xsl:for-each select="DatumPrvegaDneZadrzanostiZaRazlog">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																			<xsl:text>. </xsl:text>
																			<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-bottom-width="thin" border-left-color="gray" border-left-style="none" border-left-width="thin" border-right-color="green" border-right-style="none" border-right-width="thin" border-top-color="green" border-top-style="none" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="solid" border-bottom-width="thin" border-left-color="gray" border-left-style="solid" border-left-width="thin" border-right-color="green" border-right-style="solid" border-right-width="thin" border-top-color="green" border-top-style="solid" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x200B;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block padding-left="0.1cm" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
														<fo:inline font-family="Open Sans">
															<xsl:text>Invalid: </xsl:text>
														</fo:inline>
														<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
															<xsl:for-each select="Podatki">
																<xsl:for-each select="KategorijaInvalidnosti">
																	<xsl:for-each select="@sifra">
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:value-of select="string(.)"/>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
														<fo:inline font-family="Open Sans">
															<xsl:text>&#160; </xsl:text>
														</fo:inline>
														<xsl:choose>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/KategorijaInvalidnosti/@sifra=1">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>I.kat.</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/KategorijaInvalidnosti/@sifra=2">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>II.kat.</xsl:text>
																</fo:inline>
															</xsl:when>
															<xsl:when test="onlC:PotrdiloOZadrzanostiOdDela/Podatki/KategorijaInvalidnosti/@sifra=3">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:text>III.kat.</xsl:text>
																</fo:inline>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-bottom-width="thin" border-left-color="green" border-left-style="none" border-left-width="thin" border-right-color="green" border-right-style="none" border-right-width="thin" border-top-color="green" border-top-style="none" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="after">
												<fo:block text-align="justify">
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
													<fo:inline font-family="Open Sans">
														<xsl:text>Dne: </xsl:text>
													</fo:inline>
													<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
														<xsl:for-each select="Podatki">
															<xsl:for-each select="DatumIzdajePotrdila">
																<fo:inline font-family="Open Sans" font-weight="bold">
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00', 'format1')"/>
																	<xsl:text>. </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00', 'format1')"/>
																	<xsl:text>. </xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000', 'format1')"/>
																</fo:inline>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
													<fo:block/>
													<fo:inline font-family="Open Sans">
														<xsl:text>Kraj: </xsl:text>
													</fo:inline>
													<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
														<xsl:for-each select="Podatki">
															<xsl:for-each select="KrajIzdajePotrdila">
																<xsl:variable name="value-of-template_60">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_60),'&#x200B;')">
																		<fo:block font-family="Open Sans" font-weight="bold">
																			<xsl:copy-of select="$value-of-template_60"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline font-family="Open Sans" font-weight="bold">
																			<xsl:copy-of select="$value-of-template_60"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
													<fo:block/>
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
													<fo:inline color="red" font-family="Open Sans" font-size="12pt" font-weight="bold">
														<xsl:text>PREKLICAN</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border-bottom-style="none" border-left-style="none" border-right-style="none" border-top-style="none" border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border-bottom-color="green" border-bottom-style="none" border-bottom-width="thin" border-left-color="green" border-left-style="none" border-left-width="thin" border-right-color="green" border-right-style="none" border-right-width="thin" border-top-color="green" border-top-style="none" border-top-width="thin" border="solid 1pt gray" padding="2pt" display-align="after">
												<fo:block text-align="left">
													<fo:block>
														<fo:leader leader-pattern="space"/>
													</fo:block>
													<fo:inline font-family="Open Sans">
														<xsl:text>Podpisnik: </xsl:text>
													</fo:inline>
													<fo:inline font-family="Open Sans" font-weight="bold">
														<xsl:value-of select="translate( substring-before( substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509SubjectName , &apos;CN=&apos;), &apos;,&apos;), &apos;0123456789&apos;,&apos;&apos;)"/>
													</fo:inline>
													<fo:block/>
													<fo:inline font-family="Open Sans">
														<xsl:text>Izdajatelj dig.potrdila: </xsl:text>
													</fo:inline>
													<xsl:choose>
														<xsl:when test="substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;CN=&apos;)">
															<fo:inline font-family="Open Sans" font-weight="bold">
																<xsl:value-of select="substring-before( substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;CN=&apos;), &apos;,&apos; )"/>
															</fo:inline>
														</xsl:when>
														<xsl:when test="substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;OU=&apos;)">
															<fo:inline font-family="Open Sans" font-weight="bold">
																<xsl:value-of select="substring-before( substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;OU=&apos;), &apos;,&apos; )"/>
															</fo:inline>
														</xsl:when>
														<xsl:when test="substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;O=&apos;)">
															<fo:inline font-family="Open Sans" font-weight="bold">
																<xsl:value-of select="substring-before( substring-after( onlC:PotrdiloOZadrzanostiOdDela/Podatki/ds:Signature/ds:KeyInfo/ds:X509Data/ds:X509IssuerSerial/ds:X509IssuerName, &apos;O=&apos;), &apos;,&apos; )"/>
															</fo:inline>
														</xsl:when>
													</xsl:choose>
													<fo:block/>
													<fo:inline font-family="Open Sans">
														<xsl:text>Ser.št.dig.pot.: </xsl:text>
													</fo:inline>
													<xsl:for-each select="onlC:PotrdiloOZadrzanostiOdDela">
														<xsl:for-each select="Podatki">
															<xsl:for-each select="ds:Signature">
																<xsl:for-each select="ds:KeyInfo">
																	<xsl:for-each select="ds:X509Data">
																		<xsl:for-each select="ds:X509IssuerSerial">
																			<xsl:for-each select="ds:X509SerialNumber">
																				<xsl:variable name="value-of-template_61">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_61),'&#x200B;')">
																						<fo:block font-family="Open Sans" font-weight="bold">
																							<xsl:copy-of select="$value-of-template_61"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-family="Open Sans" font-weight="bold">
																							<xsl:copy-of select="$value-of-template_61"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
													<fo:inline font-family="Open Sans">
														<xsl:text>&#160; </xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:block>
								<fo:leader leader-pattern="space"/>
							</fo:block>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
